{"version":3,"file":"static/js/292.c8c1cb9b.chunk.js","mappings":"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","sources":["Api/Api.jsx","components/BackLink.jsx","pages/details.styled.js","components/Cast/cast.styled.js","components/Cast/Cast.jsx","hooks/useCast.jsx","components/Reviews/Reviews.jsx","hooks/useReviews.jsx","pages/MovieDetailsPage.jsx","hooks/useDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const API_KEY = '171cb119fb2bebf41fcc8130ecf25138';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false&page=1`\n  );\n  return response.data;\n};\n\nexport const getMovieId = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=171cb119fb2bebf41fcc8130ecf25138&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=171cb119fb2bebf41fcc8130ecf25138&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n\n  :hover {\n    color: #9966cc;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  margin-top: 50px;\n  margin-bottom: 50px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 600px;\n  margin-left: 10px;\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\n  grid-gap: 26px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Span = styled.span`\n  font-weight: 600;\n`;\n","import { useCast } from 'hooks/useCast';\nimport { useParams } from 'react-router-dom';\nimport { Container, Span } from './cast.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const { actors } = useCast(movieId);\n\n  if (!actors) return <Loader />;\n\n  return (\n    <Container>\n      {actors.map(actor => {\n        return (\n          <div key={actor.id}>\n            <img\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${actor.profile_path}`\n                  : `https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg`\n              }\n              alt={actor.name}\n              width=\"180\"\n              height=\"250\"\n            />\n            <p>\n              <Span>{actor.name}</Span>\n            </p>\n            <p>As: {actor.character}</p>\n          </div>\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default Cast;\n","import { getCast } from 'Api/Api';\nimport { useEffect, useState } from 'react';\n\nexport const useCast = movieId => {\n  const [actors, setActors] = useState(null);\n\n  useEffect(() => {\n    if (movieId)\n      getCast(movieId).then(response => {\n        setActors([...response]);\n      });\n  }, [movieId]);\n  return { actors };\n};\n","import { useParams } from 'react-router-dom';\nimport { useReviews } from 'hooks/useReviews';\nimport Loader from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const { reviews } = useReviews(movieId);\n\n  if (!reviews) return <Loader />;\n\n  if (reviews.length === 0) {\n    return <p>We don't have any reviews for this movie</p>;\n  }\n\n  return (\n    <ul>\n      {reviews.map(review => {\n        return (\n          <li key={review.author}>\n            <p>{review.author}</p>\n            <p>{review.content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import { getReviews } from 'Api/Api';\nimport { useEffect, useState } from 'react';\n\nexport const useReviews = movieId => {\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    if (movieId)\n      getReviews(movieId).then(response => {\n        setReviews([...response.results]);\n      });\n  }, [movieId]);\n  return { reviews };\n};\n","import { Outlet } from 'react-router-dom';\nimport { Suspense, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { useDetails } from 'hooks/useDetails';\nimport { BackLink } from 'components/BackLink';\nimport { Container, Wrapper } from './details.styled';\nimport Loader from 'components/Loader/Loader';\n\nimport Cast from '../components/Cast/Cast';\nimport Reviews from '../components/Reviews/Reviews';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const { movie } = useDetails(movieId);\n  const location = useLocation();\n  const [showCast, setShowCast] = useState(false);\n  const [showReviews, setShowReviews] = useState(false);\n\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  if (!movie) return <Loader />;\n\n  return (\n    <div>\n      <BackLink to={backLinkHref}>Back to movie list</BackLink>\n      <Container>\n        <img\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n              : `https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg`\n          }\n          alt={`${movie.title}`}\n          width=\"240\"\n        />\n        <Wrapper>\n          <h2>\n            {movie.title}, {movie.release_date.slice(0, 4)}\n          </h2>\n          <p>User Score: {Math.round(movie.vote_average * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{movie.overview}</p>\n          <h3>Genre</h3>\n          {`${movie.genres.map(genre => genre.name).join(' / ')}`}\n        </Wrapper>\n      </Container>\n      <h3>Additional Information</h3>\n      <ul>\n        <li>\n          <button onClick={e => setShowCast(true)}>Cast</button>\n          {showCast && <Cast />}\n        </li>\n        <li>\n          <button onClick={e => setShowReviews(true)}>Reviews</button>\n\n          {showReviews && <Reviews />}\n        </li>\n      </ul>\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import { getMovieId } from 'Api/Api';\nimport { useEffect, useState } from 'react';\n\nexport const useDetails = movieId => {\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    if (movieId)\n      getMovieId(movieId).then(response => {\n        setMovie({ ...response });\n      });\n  }, [movieId]);\n  return { movie };\n};\n"],"names":["axios","API_KEY","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","stop","apply","arguments","getQuery","_ref2","_callee2","query","_context2","_x","getMovieId","_ref3","_callee3","movieId","_context3","_x2","getCast","_ref4","_callee4","_context4","cast","_x3","getReviews","_ref5","_callee5","_context5","_x4","StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","BackLink","to","children","_jsxs","_jsx","HiArrowLeft","size","Container","Wrapper","_templateObject2","Span","_useCast","_useState","useState","_useState2","_slicedToArray","actors","setActors","useEffect","then","_toConsumableArray","useCast","useParams","map","actor","src","profile_path","alt","name","width","height","character","id","Loader","_useReviews","reviews","setReviews","results","useReviews","length","review","author","content","_location$state$from","_location$state","_useDetails","movie","setMovie","_objectSpread","useDetails","location","useLocation","showCast","setShowCast","_useState3","_useState4","showReviews","setShowReviews","backLinkHref","state","from","poster_path","title","release_date","slice","Math","round","vote_average","overview","genres","genre","join","onClick","e","Cast","Reviews","Suspense","fallback","Outlet"],"sourceRoot":""}