{"version":3,"file":"static/js/150.1da3c667.chunk.js","mappings":"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","sources":["Api/Api.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","components/Movies.jsx","pages/MoviesPage.jsx","hooks/useQuery.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const API_KEY = '171cb119fb2bebf41fcc8130ecf25138';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false&page=1`\n  );\n  return response.data;\n};\n\nexport const getMovieId = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=171cb119fb2bebf41fcc8130ecf25138&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=171cb119fb2bebf41fcc8130ecf25138&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  margin-bottom: 16px;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n  width: 300px;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 6px;\n`;\n","import { Wrapper, Icon, Input } from './SearchBox.styled';\nimport PropTypes from 'prop-types';\n\nexport const SearchBox = ({ value, onChange }) => {\n  return (\n    <Wrapper>\n      <Icon />\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n    </Wrapper>\n  );\n};\n\nSearchBox.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport Loader from './Loader/Loader';\n\nconst Movies = ({ movies }) => {\n  const location = useLocation();\n\n  if (!movies) return <Loader />;\n\n  return (\n    <ul>\n      {movies.map(movie => {\n        return (\n          <li key={movie.id}>\n            <Link to={`${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default Movies;\n","import { SearchBox } from 'components/SearchBox/SearchBox';\nimport Movies from 'components/Movies';\nimport { useQuery } from 'hooks/useQuery';\nimport { useSearchParams } from 'react-router-dom';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const { movies } = useQuery(query);\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  const visibleListOfMovies = movies.filter(movie =>\n    movie.title.toLowerCase().includes(query.toLowerCase())\n  );\n\n  return (\n    <div>\n      <SearchBox value={query} onChange={updateQueryString} />\n      <Movies movies={visibleListOfMovies} />\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import { getQuery } from 'Api/Api';\nimport { useEffect, useState } from 'react';\n\nexport const useQuery = query => {\n  const [movies, setSearchedMovie] = useState([]);\n\n  useEffect(() => {\n    if (query === '') return;\n\n    getQuery(query).then(response => {\n      setSearchedMovie([...response.results]);\n    });\n  }, [query]);\n\n  return { movies };\n};\n"],"names":["axios","API_KEY","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","stop","apply","arguments","getQuery","_ref2","_callee2","query","_context2","_x","getMovieId","_ref3","_callee3","movieId","_context3","_x2","getCast","_ref4","_callee4","_context4","cast","_x3","getReviews","_ref5","_callee5","_context5","_x4","Wrapper","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","Icon","HiSearch","_templateObject3","SearchBox","value","onChange","_jsxs","children","_jsx","type","e","target","movies","location","useLocation","map","movie","Link","to","id","state","from","title","Loader","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","get","_useQuery","_useState","useState","_useState2","setSearchedMovie","useEffect","then","_toConsumableArray","results","useQuery","visibleListOfMovies","filter","toLowerCase","includes","Movies"],"sourceRoot":""}